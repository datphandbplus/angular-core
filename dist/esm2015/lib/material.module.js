import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { NgxMatSelectSearchModule } from 'ngx-mat-select-search';
import { MatCheckboxModule, MatButtonModule, MatInputModule, MatAutocompleteModule, MatDatepickerModule, MatNativeDateModule, MatFormFieldModule, MatRadioModule, MatSelectModule, MatSliderModule, MatSlideToggleModule, MatMenuModule, MatSidenavModule, MatToolbarModule, MatListModule, MatGridListModule, MatCardModule, MatStepperModule, MatTabsModule, MatExpansionModule, MatButtonToggleModule, MatChipsModule, MatIconModule, MatProgressSpinnerModule, MatProgressBarModule, MatDialogModule, MatTooltipModule, MatSnackBarModule, MatTableModule, MatSortModule, MatPaginatorModule } from '@angular/material';
let MaterialModule = class MaterialModule {
};
MaterialModule = tslib_1.__decorate([
    NgModule({
        imports: [
            MatCheckboxModule, MatButtonModule, MatInputModule,
            MatAutocompleteModule, MatDatepickerModule, MatNativeDateModule,
            MatFormFieldModule, MatRadioModule, MatSelectModule,
            MatSliderModule, MatSlideToggleModule, MatMenuModule,
            MatSidenavModule, MatToolbarModule, MatListModule,
            MatGridListModule, MatCardModule, MatStepperModule,
            MatTabsModule, MatExpansionModule, MatButtonToggleModule,
            MatChipsModule, MatIconModule, MatProgressSpinnerModule,
            MatProgressBarModule, MatDialogModule, MatTooltipModule,
            MatSnackBarModule, MatTableModule, NgxMatSelectSearchModule,
            MatSortModule, MatPaginatorModule,
        ],
        exports: [
            MatCheckboxModule, MatButtonModule, MatInputModule,
            MatAutocompleteModule, MatDatepickerModule, MatNativeDateModule,
            MatFormFieldModule, MatRadioModule, MatSelectModule,
            MatSliderModule, MatSlideToggleModule, MatMenuModule,
            MatSidenavModule, MatToolbarModule, MatListModule,
            MatGridListModule, MatCardModule, MatStepperModule,
            MatTabsModule, MatExpansionModule, MatButtonToggleModule,
            MatChipsModule, MatIconModule, MatProgressSpinnerModule,
            MatProgressBarModule, MatDialogModule, MatTooltipModule,
            MatSnackBarModule, MatTableModule, NgxMatSelectSearchModule,
            MatSortModule, MatPaginatorModule,
        ],
    })
], MaterialModule);
export { MaterialModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0ZXJpYWwubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1jb3JlLyIsInNvdXJjZXMiOlsibGliL21hdGVyaWFsLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNqRSxPQUFPLEVBQ04saUJBQWlCLEVBQUUsZUFBZSxFQUFFLGNBQWMsRUFDbEQscUJBQXFCLEVBQUUsbUJBQW1CLEVBQUUsbUJBQW1CLEVBQy9ELGtCQUFrQixFQUFFLGNBQWMsRUFBRSxlQUFlLEVBQ25ELGVBQWUsRUFBRSxvQkFBb0IsRUFBRSxhQUFhLEVBQ3BELGdCQUFnQixFQUFFLGdCQUFnQixFQUFFLGFBQWEsRUFDakQsaUJBQWlCLEVBQUUsYUFBYSxFQUFFLGdCQUFnQixFQUNsRCxhQUFhLEVBQUUsa0JBQWtCLEVBQUUscUJBQXFCLEVBQ3hELGNBQWMsRUFBRSxhQUFhLEVBQUUsd0JBQXdCLEVBQ3ZELG9CQUFvQixFQUFFLGVBQWUsRUFBRSxnQkFBZ0IsRUFDdkQsaUJBQWlCLEVBQUUsY0FBYyxFQUNqQyxhQUFhLEVBQUUsa0JBQWtCLEVBQ2pDLE1BQU0sbUJBQW1CLENBQUM7QUE4QjNCLElBQWEsY0FBYyxHQUEzQixNQUFhLGNBQWM7Q0FBRyxDQUFBO0FBQWpCLGNBQWM7SUE1QjFCLFFBQVEsQ0FBQztRQUNULE9BQU8sRUFBRTtZQUNSLGlCQUFpQixFQUFFLGVBQWUsRUFBRSxjQUFjO1lBQ2xELHFCQUFxQixFQUFFLG1CQUFtQixFQUFFLG1CQUFtQjtZQUMvRCxrQkFBa0IsRUFBRSxjQUFjLEVBQUUsZUFBZTtZQUNuRCxlQUFlLEVBQUUsb0JBQW9CLEVBQUUsYUFBYTtZQUNwRCxnQkFBZ0IsRUFBRSxnQkFBZ0IsRUFBRSxhQUFhO1lBQ2pELGlCQUFpQixFQUFFLGFBQWEsRUFBRSxnQkFBZ0I7WUFDbEQsYUFBYSxFQUFFLGtCQUFrQixFQUFFLHFCQUFxQjtZQUN4RCxjQUFjLEVBQUUsYUFBYSxFQUFFLHdCQUF3QjtZQUN2RCxvQkFBb0IsRUFBRSxlQUFlLEVBQUUsZ0JBQWdCO1lBQ3ZELGlCQUFpQixFQUFFLGNBQWMsRUFBRSx3QkFBd0I7WUFDM0QsYUFBYSxFQUFFLGtCQUFrQjtTQUNqQztRQUNELE9BQU8sRUFBRTtZQUNSLGlCQUFpQixFQUFFLGVBQWUsRUFBRSxjQUFjO1lBQ2xELHFCQUFxQixFQUFFLG1CQUFtQixFQUFFLG1CQUFtQjtZQUMvRCxrQkFBa0IsRUFBRSxjQUFjLEVBQUUsZUFBZTtZQUNuRCxlQUFlLEVBQUUsb0JBQW9CLEVBQUUsYUFBYTtZQUNwRCxnQkFBZ0IsRUFBRSxnQkFBZ0IsRUFBRSxhQUFhO1lBQ2pELGlCQUFpQixFQUFFLGFBQWEsRUFBRSxnQkFBZ0I7WUFDbEQsYUFBYSxFQUFFLGtCQUFrQixFQUFFLHFCQUFxQjtZQUN4RCxjQUFjLEVBQUUsYUFBYSxFQUFFLHdCQUF3QjtZQUN2RCxvQkFBb0IsRUFBRSxlQUFlLEVBQUUsZ0JBQWdCO1lBQ3ZELGlCQUFpQixFQUFFLGNBQWMsRUFBRSx3QkFBd0I7WUFDM0QsYUFBYSxFQUFFLGtCQUFrQjtTQUNqQztLQUNELENBQUM7R0FDVyxjQUFjLENBQUc7U0FBakIsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ3hNYXRTZWxlY3RTZWFyY2hNb2R1bGUgfSBmcm9tICduZ3gtbWF0LXNlbGVjdC1zZWFyY2gnO1xuaW1wb3J0IHtcblx0TWF0Q2hlY2tib3hNb2R1bGUsIE1hdEJ1dHRvbk1vZHVsZSwgTWF0SW5wdXRNb2R1bGUsXG5cdE1hdEF1dG9jb21wbGV0ZU1vZHVsZSwgTWF0RGF0ZXBpY2tlck1vZHVsZSwgTWF0TmF0aXZlRGF0ZU1vZHVsZSxcblx0TWF0Rm9ybUZpZWxkTW9kdWxlLCBNYXRSYWRpb01vZHVsZSwgTWF0U2VsZWN0TW9kdWxlLFxuXHRNYXRTbGlkZXJNb2R1bGUsIE1hdFNsaWRlVG9nZ2xlTW9kdWxlLCBNYXRNZW51TW9kdWxlLFxuXHRNYXRTaWRlbmF2TW9kdWxlLCBNYXRUb29sYmFyTW9kdWxlLCBNYXRMaXN0TW9kdWxlLFxuXHRNYXRHcmlkTGlzdE1vZHVsZSwgTWF0Q2FyZE1vZHVsZSwgTWF0U3RlcHBlck1vZHVsZSxcblx0TWF0VGFic01vZHVsZSwgTWF0RXhwYW5zaW9uTW9kdWxlLCBNYXRCdXR0b25Ub2dnbGVNb2R1bGUsXG5cdE1hdENoaXBzTW9kdWxlLCBNYXRJY29uTW9kdWxlLCBNYXRQcm9ncmVzc1NwaW5uZXJNb2R1bGUsXG5cdE1hdFByb2dyZXNzQmFyTW9kdWxlLCBNYXREaWFsb2dNb2R1bGUsIE1hdFRvb2x0aXBNb2R1bGUsXG5cdE1hdFNuYWNrQmFyTW9kdWxlLCBNYXRUYWJsZU1vZHVsZSxcblx0TWF0U29ydE1vZHVsZSwgTWF0UGFnaW5hdG9yTW9kdWxlXG59IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsJztcblxuQE5nTW9kdWxlKHtcblx0aW1wb3J0czogW1xuXHRcdE1hdENoZWNrYm94TW9kdWxlLCBNYXRCdXR0b25Nb2R1bGUsIE1hdElucHV0TW9kdWxlLFxuXHRcdE1hdEF1dG9jb21wbGV0ZU1vZHVsZSwgTWF0RGF0ZXBpY2tlck1vZHVsZSwgTWF0TmF0aXZlRGF0ZU1vZHVsZSxcblx0XHRNYXRGb3JtRmllbGRNb2R1bGUsIE1hdFJhZGlvTW9kdWxlLCBNYXRTZWxlY3RNb2R1bGUsXG5cdFx0TWF0U2xpZGVyTW9kdWxlLCBNYXRTbGlkZVRvZ2dsZU1vZHVsZSwgTWF0TWVudU1vZHVsZSxcblx0XHRNYXRTaWRlbmF2TW9kdWxlLCBNYXRUb29sYmFyTW9kdWxlLCBNYXRMaXN0TW9kdWxlLFxuXHRcdE1hdEdyaWRMaXN0TW9kdWxlLCBNYXRDYXJkTW9kdWxlLCBNYXRTdGVwcGVyTW9kdWxlLFxuXHRcdE1hdFRhYnNNb2R1bGUsIE1hdEV4cGFuc2lvbk1vZHVsZSwgTWF0QnV0dG9uVG9nZ2xlTW9kdWxlLFxuXHRcdE1hdENoaXBzTW9kdWxlLCBNYXRJY29uTW9kdWxlLCBNYXRQcm9ncmVzc1NwaW5uZXJNb2R1bGUsXG5cdFx0TWF0UHJvZ3Jlc3NCYXJNb2R1bGUsIE1hdERpYWxvZ01vZHVsZSwgTWF0VG9vbHRpcE1vZHVsZSxcblx0XHRNYXRTbmFja0Jhck1vZHVsZSwgTWF0VGFibGVNb2R1bGUsIE5neE1hdFNlbGVjdFNlYXJjaE1vZHVsZSxcblx0XHRNYXRTb3J0TW9kdWxlLCBNYXRQYWdpbmF0b3JNb2R1bGUsXG5cdF0sXG5cdGV4cG9ydHM6IFtcblx0XHRNYXRDaGVja2JveE1vZHVsZSwgTWF0QnV0dG9uTW9kdWxlLCBNYXRJbnB1dE1vZHVsZSxcblx0XHRNYXRBdXRvY29tcGxldGVNb2R1bGUsIE1hdERhdGVwaWNrZXJNb2R1bGUsIE1hdE5hdGl2ZURhdGVNb2R1bGUsXG5cdFx0TWF0Rm9ybUZpZWxkTW9kdWxlLCBNYXRSYWRpb01vZHVsZSwgTWF0U2VsZWN0TW9kdWxlLFxuXHRcdE1hdFNsaWRlck1vZHVsZSwgTWF0U2xpZGVUb2dnbGVNb2R1bGUsIE1hdE1lbnVNb2R1bGUsXG5cdFx0TWF0U2lkZW5hdk1vZHVsZSwgTWF0VG9vbGJhck1vZHVsZSwgTWF0TGlzdE1vZHVsZSxcblx0XHRNYXRHcmlkTGlzdE1vZHVsZSwgTWF0Q2FyZE1vZHVsZSwgTWF0U3RlcHBlck1vZHVsZSxcblx0XHRNYXRUYWJzTW9kdWxlLCBNYXRFeHBhbnNpb25Nb2R1bGUsIE1hdEJ1dHRvblRvZ2dsZU1vZHVsZSxcblx0XHRNYXRDaGlwc01vZHVsZSwgTWF0SWNvbk1vZHVsZSwgTWF0UHJvZ3Jlc3NTcGlubmVyTW9kdWxlLFxuXHRcdE1hdFByb2dyZXNzQmFyTW9kdWxlLCBNYXREaWFsb2dNb2R1bGUsIE1hdFRvb2x0aXBNb2R1bGUsXG5cdFx0TWF0U25hY2tCYXJNb2R1bGUsIE1hdFRhYmxlTW9kdWxlLCBOZ3hNYXRTZWxlY3RTZWFyY2hNb2R1bGUsXG5cdFx0TWF0U29ydE1vZHVsZSwgTWF0UGFnaW5hdG9yTW9kdWxlLFxuXHRdLFxufSlcbmV4cG9ydCBjbGFzcyBNYXRlcmlhbE1vZHVsZSB7fVxuIl19